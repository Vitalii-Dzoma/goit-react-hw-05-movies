{"version":3,"file":"static/js/219.b24af564.chunk.js","mappings":"qQAEaA,EAAMC,EAAAA,GAAAA,IAAH,4CAYHC,GARMD,EAAAA,GAAAA,IAAH,0CAIWA,EAAAA,GAAAA,IAAH,8CAIAA,EAAAA,GAAAA,GAAH,iI,SCwBrB,EAhCa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BE,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAA4BN,GAASO,KAAKH,KACzC,CAACJ,IACJQ,QAAQC,IAAIN,IAGV,+BACE,SAAC,EAAAO,SAAD,CAAUC,UAAU,wCAApB,SACGR,IACC,eAAIS,MAAO,CAAEC,UAAW,OAAQC,QAAS,GAAzC,SACGX,EAAOY,KAAI,SAAAC,GAAK,OACf,2BACE,SAACnB,EAAD,CACEoB,IAAG,0CAAqCD,EAAME,iBAEhD,UAACnB,EAAD,YACE,SAAC,KAAD,CAAMoB,GAAE,kBAAaH,EAAMI,IAA3B,SAAkCJ,EAAMK,QACxC,uCAAeL,EAAMM,kBANhBN,EAAMI,e,0MClBtB,SAAeG,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,IAAAA,IACrB,gEAFG,cACCC,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BR,GAA9B,uFACkBI,IAAAA,IAAA,iBACXJ,EADW,8CADlB,cACCK,EADD,yBAIEA,EAASC,MAJX,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAkCT,GAAlC,uFACkBI,IAAAA,IAAA,iBACXJ,EADW,sDADlB,cACCK,EADD,yBAIEA,EAASC,KAAKI,MAJhB,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BX,GAA5B,uFACkBI,IAAAA,IAAA,iBACXJ,EADW,sDADlB,cACCK,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACkBT,IAAAA,IAAA,sFAC0DS,IAF5E,cACCR,EADD,yBAIEA,EAASC,KAAKC,SAJhB,kEA9BPH,IAAAA,SAAAA,QAAyB","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","services/movie-api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Img = styled.img`\n  display: inline;\n`;\n\nexport const Div = styled.div`\n  display: flex;\n`;\n\nexport const Description = styled.div`\n  margin-left: 10px;\n`;\n\nexport const DivImage = styled.li`\n  display: flex;\n  flex-direction: column;\n  border-bottom: 1px solid black;\n  margin-bottom: 10px;\n`;\n","import { useState, useEffect, Suspense } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport * as movieAPI from '../../services/movie-api';\nimport { Img } from './Cast.styled';\nimport { DivImage } from './Cast.styled';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    movieAPI.fetchMoviesDetails(movieId).then(setMovies);\n  }, [movieId]);\n  console.log(movies);\n\n  return (\n    <>\n      <Suspense fallback={<div>Loading...</div>}>\n        {movies && (\n          <ul style={{ listStyle: 'none', padding: 0 }}>\n            {movies.map(movie => (\n              <li key={movie.id}>\n                <Img\n                  src={`https://image.tmdb.org/t/p/w200/${movie.profile_path}`}\n                ></Img>\n                <DivImage>\n                  <Link to={`/movies/${movie.id}`}>{movie.name}</Link>\n                  <p>Character: {movie.character}</p>\n                </DivImage>\n              </li>\n            ))}\n          </ul>\n        )}\n      </Suspense>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrendingMovies() {\n  const response = await axios.get(\n    '/trending/movie/day?api_key=3c97a1babd597f31c1fa5b3567357dfb'\n  );\n  return response.data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const response = await axios.get(\n    `/movie/${id}?api_key=3c97a1babd597f31c1fa5b3567357dfb`\n  );\n  return response.data;\n}\n\nexport async function fetchMoviesDetails(id) {\n  const response = await axios.get(\n    `/movie/${id}/credits?api_key=3c97a1babd597f31c1fa5b3567357dfb`\n  );\n  return response.data.cast;\n}\n\nexport async function fetchReviews(id) {\n  const response = await axios.get(\n    `/movie/${id}/reviews?api_key=3c97a1babd597f31c1fa5b3567357dfb`\n  );\n  return response.data.results;\n}\n\nexport async function searchMovies(query) {\n  const response = await axios.get(\n    `/search/movie?api_key=3c97a1babd597f31c1fa5b3567357dfb&language=en-US&query=${query}`\n  );\n  return response.data.results;\n}\n"],"names":["Img","styled","DivImage","movieId","useParams","useState","movies","setMovies","useEffect","movieAPI","then","console","log","Suspense","fallback","style","listStyle","padding","map","movie","src","profile_path","to","id","name","character","fetchTrendingMovies","axios","response","data","results","fetchMovieById","fetchMoviesDetails","cast","fetchReviews","searchMovies","query"],"sourceRoot":""}